double square_root(double num, double epsilon){
    if(num < 0){
        return -1;
    }
    double x = num/2;
    double next_x ;
    do{
    next_x = 0.5 * (x + num/x);
    if(fabs(next_x - x) < epsilon){
      return next_x;  
    }
    else{
    
    x = next_x;
    }
    } while (1);
    
}

int main()
{
   double y;
    double eps = 0.01;
    printf("enter number\n");
    scanf("%lf", &y);
   double result = square_root(y,eps);
  
    printf("%.1lf", result);
   

    return 0;
}
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Function to fill the array with random numbers
void fill_array_with_random(int *arr, int n) {
    for (int i = 0; i < n; i++) {
        arr[i] = rand(); // Fill with random values
    }
}

// Function to display the array elements
void display_array(int *arr, int n) {
    printf("Array elements:\n");
    for (int i = 0; i < n; i++) {
        printf("%d\n", arr[i]);
    }
}

int main() {
    int n;

    printf("Enter the number of elements: ");
    scanf("%d", &n);

    // Seed the random number generator
    srand(time(NULL));

    // Dynamically allocate memory for the array
    int *arr = malloc(sizeof(int) * n);
    if (arr == NULL) {
        printf("Memory allocation failed.\n");
        return 1;
    }

    // Fill the array with random values
    fill_array_with_random(arr, n);

    // Display the array elements
    display_array(arr, n);

    // Free the allocated memory
    free(arr);

    return 0;
}
//filling an array using two functions and rand 
